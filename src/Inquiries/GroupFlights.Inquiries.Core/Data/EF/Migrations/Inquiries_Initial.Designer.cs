// <auto-generated />
using System;
using GroupFlights.Inquiries.Core.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GroupFlights.Inquiries.Core.Data.EF.Migrations
{
    [DbContext(typeof(InquiriesDbContext))]
    [Migration("Inquiries_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("inquiries")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupFlights.Inquiries.Core.Models.Inquiry", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("AdditionalServicesRequired")
                        .HasColumnType("boolean");

                    b.Property<bool>("CheckedBaggageRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<Guid?>("OfferId")
                        .HasColumnType("uuid");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("text");

                    b.Property<int?>("VerificationResult")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Inquiries", "inquiries");
                });

            modelBuilder.Entity("GroupFlights.Inquiries.Core.Models.Inquiry", b =>
                {
                    b.OwnsOne("GroupFlights.Inquiries.Core.Models.Inquirer", "Inquirer", b1 =>
                        {
                            b1.Property<Guid>("InquiryId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("text");

                            b1.Property<string>("Surname")
                                .HasColumnType("text");

                            b1.Property<Guid?>("UserId")
                                .HasColumnType("uuid");

                            b1.HasKey("InquiryId");

                            b1.ToTable("Inquiries", "inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquiryId");
                        });

                    b.OwnsOne("GroupFlights.Inquiries.Core.Models.InquiredFlight", "Return", b1 =>
                        {
                            b1.Property<Guid>("InquiryId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("timestamp without time zone");

                            b1.HasKey("InquiryId");

                            b1.ToTable("Inquiries", "inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquiryId");

                            b1.OwnsOne("GroupFlights.Shared.Types.Airport", "SourceAirport", b2 =>
                                {
                                    b2.Property<Guid>("InquiredFlightInquiryId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .HasColumnType("text");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Country")
                                        .HasColumnType("text");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.HasKey("InquiredFlightInquiryId");

                                    b2.ToTable("Inquiries", "inquiries");

                                    b2.WithOwner()
                                        .HasForeignKey("InquiredFlightInquiryId");
                                });

                            b1.OwnsOne("GroupFlights.Shared.Types.Airport", "TargetAirport", b2 =>
                                {
                                    b2.Property<Guid>("InquiredFlightInquiryId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .HasColumnType("text");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Country")
                                        .HasColumnType("text");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.HasKey("InquiredFlightInquiryId");

                                    b2.ToTable("Inquiries", "inquiries");

                                    b2.WithOwner()
                                        .HasForeignKey("InquiredFlightInquiryId");
                                });

                            b1.Navigation("SourceAirport");

                            b1.Navigation("TargetAirport");
                        });

                    b.OwnsOne("GroupFlights.Inquiries.Core.Models.InquiredFlight", "Travel", b1 =>
                        {
                            b1.Property<Guid>("InquiryId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("timestamp without time zone");

                            b1.HasKey("InquiryId");

                            b1.ToTable("Inquiries", "inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquiryId");

                            b1.OwnsOne("GroupFlights.Shared.Types.Airport", "SourceAirport", b2 =>
                                {
                                    b2.Property<Guid>("InquiredFlightInquiryId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .HasColumnType("text");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Country")
                                        .HasColumnType("text");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.HasKey("InquiredFlightInquiryId");

                                    b2.ToTable("Inquiries", "inquiries");

                                    b2.WithOwner()
                                        .HasForeignKey("InquiredFlightInquiryId");
                                });

                            b1.OwnsOne("GroupFlights.Shared.Types.Airport", "TargetAirport", b2 =>
                                {
                                    b2.Property<Guid>("InquiredFlightInquiryId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .HasColumnType("text");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Country")
                                        .HasColumnType("text");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.HasKey("InquiredFlightInquiryId");

                                    b2.ToTable("Inquiries", "inquiries");

                                    b2.WithOwner()
                                        .HasForeignKey("InquiredFlightInquiryId");
                                });

                            b1.Navigation("SourceAirport");

                            b1.Navigation("TargetAirport");
                        });

                    b.OwnsOne("GroupFlights.Inquiries.Core.Models.PassengersData", "DeclaredPassengers", b1 =>
                        {
                            b1.Property<Guid>("InquiryId")
                                .HasColumnType("uuid");

                            b1.Property<int>("AdultCount")
                                .HasColumnType("integer");

                            b1.Property<int>("ChildrenCount")
                                .HasColumnType("integer");

                            b1.Property<int>("InfantCount")
                                .HasColumnType("integer");

                            b1.HasKey("InquiryId");

                            b1.ToTable("Inquiries", "inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquiryId");
                        });

                    b.OwnsMany("GroupFlights.Inquiries.Core.Models.PriorityChoice", "Priorities", b1 =>
                        {
                            b1.Property<Guid>("InquiryId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<long>("Feature")
                                .HasColumnType("bigint");

                            b1.Property<int>("Priority")
                                .HasColumnType("integer");

                            b1.HasKey("InquiryId", "Id");

                            b1.ToTable("PriorityChoice", "inquiries");

                            b1.WithOwner()
                                .HasForeignKey("InquiryId");
                        });

                    b.Navigation("DeclaredPassengers");

                    b.Navigation("Inquirer");

                    b.Navigation("Priorities");

                    b.Navigation("Return");

                    b.Navigation("Travel");
                });
#pragma warning restore 612, 618
        }
    }
}

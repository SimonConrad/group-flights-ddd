// <auto-generated />
using System;
using GroupFlights.Finance.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GroupFlights.Finance.Core.Data.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("Finance_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("finance")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupFlights.Finance.Core.Models.Payer", b =>
                {
                    b.Property<Guid>("PayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsLegalEntity")
                        .HasColumnType("boolean");

                    b.Property<string>("PayerFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("uuid");

                    b.HasKey("PayerId");

                    b.ToTable("Payers", "finance");
                });

            modelBuilder.Entity("GroupFlights.Finance.Core.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Payed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PayerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PaymentGatewaySecret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("uuid");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments", "finance");
                });

            modelBuilder.Entity("GroupFlights.Finance.Core.Models.Payment", b =>
                {
                    b.OwnsOne("GroupFlights.Shared.Types.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("PaymentId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments", "finance");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.Navigation("Amount");
                });
#pragma warning restore 612, 618
        }
    }
}

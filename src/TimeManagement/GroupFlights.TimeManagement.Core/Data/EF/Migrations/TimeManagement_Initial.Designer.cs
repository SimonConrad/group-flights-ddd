// <auto-generated />
using System;
using GroupFlights.TimeManagement.Core.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GroupFlights.TimeManagement.Core.Data.EF.Migrations
{
    [DbContext(typeof(TimeManagementDbContext))]
    [Migration("TimeManagement_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("time-management")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.Deadline", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CommunicationChannel")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DeadlineDateUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Fulfilled")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Deadlines", "time-management");
                });

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.DeadlineNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeadlineId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeadlineId");

                    b.ToTable("Notifications", "time-management");
                });

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.DeadlineParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeadlineId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeadlineId");

                    b.ToTable("DeadlineParticipant", "time-management");
                });

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.Deadline", b =>
                {
                    b.OwnsOne("GroupFlights.Communication.Shared.Models.Message", "Message", b1 =>
                        {
                            b1.Property<Guid>("DeadlineId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Content")
                                .HasColumnType("text");

                            b1.Property<Guid?>("MessageTemplateId")
                                .HasColumnType("uuid");

                            b1.HasKey("DeadlineId");

                            b1.ToTable("Deadlines", "time-management");

                            b1.WithOwner()
                                .HasForeignKey("DeadlineId");
                        });

                    b.Navigation("Message");
                });

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.DeadlineNotification", b =>
                {
                    b.HasOne("GroupFlights.TimeManagement.Core.Models.Deadline", null)
                        .WithMany("Notifications")
                        .HasForeignKey("DeadlineId");
                });

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.DeadlineParticipant", b =>
                {
                    b.HasOne("GroupFlights.TimeManagement.Core.Models.Deadline", null)
                        .WithMany("Participants")
                        .HasForeignKey("DeadlineId");
                });

            modelBuilder.Entity("GroupFlights.TimeManagement.Core.Models.Deadline", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
